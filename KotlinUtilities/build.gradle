plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
}

//ext.junitVersion = "5.3.2"
//
//repositories { mavenCentral() }
//
//test { useJUnitPlatform() }

allprojects {
    apply plugin: 'kotlin'

    ext.junitVersion = "5.3.2"

    repositories { mavenCentral() }

    test { useJUnitPlatform() }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        compile "org.jetbrains.kotlin:kotlin-reflect"

        testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        runtime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    }

    compileKotlin { kotlinOptions { jvmTarget = "1.8" }}
    compileTestKotlin { kotlinOptions { jvmTarget = "1.8" }}
}

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/dev"
        }
    }
}

dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//    compile "org.jetbrains.kotlin:kotlin-reflect"
//
//    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
//    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
//    runtime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    compile project("model")
    compile project("techware")
}
//
//compileKotlin { kotlinOptions { jvmTarget = "1.8" }}
//compileTestKotlin { kotlinOptions { jvmTarget = "1.8" }}

/**
 * to execute like java -jar parse.jar /Users/luizsilva/Projects/Research/TechnicalContent/KotlinUtilities/src/main/resources/file1.csv
 */

jar {
    from(configurations.compile.collect{it.isDirectory() ? it :zipTree(it)}){
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    baseName = "parse"
    manifest{
        attributes("Main-class":"MainKt")
    }
}